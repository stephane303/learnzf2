<script>
    Vue.component('todo-item', {
  // The todo-item component now accepts a
  // "prop", which is like a custom attribute.
  // This prop is called todo.
  props: ['todo'],
  template: '<li>{{ todo.text }}</li>'
})
</script>
<div class="hero-unit">
    <h1><?php 
        echo sprintf($this->translate('Welcome to %s<br>'), $this->applicationName);
        echo sprintf($this->translate('version: %s'), $this->version) ?></h1>
</div>

<div id="app">
  {{ message }}
</div>

<div id="app-2">
  <span v-bind:title="message">
    Hover your mouse over me for a few seconds to see my dynamically bound title!
  </span>
</div>

<div id="app-7">
  <ol>
    <!--
    Now we provide each todo-item with the todo object
    it's representing, so that its content can be dynamic
    -->
    <todo-item v-for="todo in todos" v-bind:todo="todo"></todo-item>
  </ol>
</div>
<script>

var app = new Vue({
      el: '#app',
      data: {
        message: 'Hello Vue!'
      }
    });
    
var app2 = new Vue({
      el: '#app-2',
      data: {
        message: 'Hello Vue!'
      }
    });   
    
var app7 = new Vue({
  el: '#app-7',
  data: {
    todos: [
      { text: 'Learn JavaScript' },
      { text: 'Learn Vue' },
      { text: 'Build something awesome' }
    ]
  },
  created: function(){
      console.log('Cr√©ation faite');
  },
  methods : {
    init: function(){
              $.get('http://localhost/learnzf2/public/application/index/users',
              function(data){
                  data.users.forEach(function(user){
                      
                      app7.todos.push({text:user['name']});
                  });
                  app.message= data.some_parameter;
              });
          }
  }
  
});


app7.init();

</script>